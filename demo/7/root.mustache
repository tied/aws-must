{{!

     root.mustache: root level template, 

==================================================================
STYLE section
==================================================================

+++start+++
<style>
h1 {
    color:blue; 
    font-size: 2.5em;
   }
h2 {
      color:blue;
      font-size: 1.5em;
   }
h3 {
      color:blue;
      font-size: 1.5em;
   }
.navigator {
      font-size: 0.5em;
   }
body {
    background-color: #b0c4de;
} 
/* Support fold-on/fold-off toggle */
div.fold { 
    width: 90%; padding: .42rem; border-radius: 5px;  margin: 1rem; 

}
div.fold div { 
       height: 0px; margin: .2rem; overflow: hidden; 
}
div.toggle ~ div { height: 0px; margin: .2rem; overflow: hidden; }
input.toggle:checked ~ div { 
     height: auto;      
     color: white; 
     background: #c6a24b;
     font-family: monospace;
     white-space: pre; 
}
</style>

+++close+++


==================================================================
CONTENT section
==================================================================

+++start+++

# <a id="top">aws-must demo 7 template</a>

Creates 

* **EC2 SecurityGroup** allowing ssh via port 22 from a location
    given as `SSHLocation` parameter


* **EC2 instances** using YAML parameter `InstanceType`
  (e.g. t2.micro).

  * `ImageId` of the AMI is determined using CloudFormation mapping on
    `InstanceType` and region. Supported regions are ap-northeast-1,
    ap-southeast-1, ap-southeast-2, cn-north-1, eu-central-1,
    eu-west-1, sa-east-1, us-east-1, us-gov-west-1, us-west-1,
    us-west-2.  

  * optionally installs Chef to the EC2 instance with a version given
    as `ChefVersion` parameter

  * output section contains references to InstanceId and PublicId of
    the newly created EC2 instance.

**Parameters**:

* `InstanceType`: EC2 resource instance type, (default: t2.micro)
* `KeyName` : Name of an existing EC2 KeyPair to enable SSH access to the instance, (default: demo-key)
* `SSHLocation`: The IP address range that can be used to SSH to the EC2 instances default: 0.0.0.0/0)
* `ChefVersion`: Chef version to install, (default: 11.18)


## Document Content

This document is generated automically from `aws-must` -demo
templates. 


Output contains markdown syntax between
**&plus;&plus;start&plus;&plus;** and
**&plus;&plus;close&plus;&plus;** -tags from the template files. For
each template, it

* gives a general description of the template

* documents the attribute context e.g. `.` or `./resources/Instance`,
  and attributes referenced within the template

* checkbox to show template implementation

### Table of contents
<ul>

<li><a href="#root.mustache">root.mustache</a>: root template =
starting point of template rendering</li>

<li><a href="#parameter.mustache">parameter.mustache</a>: create one
parameter entry to CloudFormation JSON parameter section</li>

<li><a href="#mappings.mustache">mappings.mustache</a>matches a key to
a corresponding set of named values</li>

<li>Resources</li>

<ul>

<li><a href="#resources.mustache">resources.mustache</a>: fixed
resources</li>

<li><a href="#resource.mustache">resource.mustache</a>: dispatch
resource based on resource type</li>

<ul> <li><a
href="#resourceSecurityGroup.mustache">resourceSecurityGroup.mustache.mustache</a>:
create an security group for accessing EC2 instances</li>

<li><a
href="#resourceInstance.mustache">resourceInstance.mustache</a>:
create an EC2 instance</li>

<ul><li><a href="#tag.mustache">tag.mustache</a>: add key-value tag property
to an</li>

<li><a href="#resourceInstanceChef.mustache">resourceInstanceChef.mustache</a>: UserData -script to install Chef
to an</li><ul>

</ul></ul></ul></ul>

<li><a href="#output.mustache">output.mustache</a>: values in
response to describe stack calls </li> </ul>


## <a id="root.mustache"></a>root.mustache <a class='navigator' href='#top'>[top]</a>

Starting point of template rendering.

**Attributes**: context= `.`

* `description`: description for the CF template
* `parameters`: array of parameter sub-documents for CloudFormation Parameters -section
* `resources`: array of resource sub-documents for CloudFormation Resources -section
* `outputs`: array of output sub-documents for CloudFormation Outputs -section

+++close+++

}}

{{! +++fold-on+++ }}

{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "{{description}}",

  "Parameters" : {
    {{# parameters }}{{> parameter }}{{/ parameters }}
  },

  "Mappings" : {
    {{> mappings }}
   },

  "Resources" : {

    {{> resources }}
    {{# resources }}{{> resource }}{{/ resources }}

  },

  "Outputs" : {

    {{# outputs }}{{> output }}{{/ outputs }}

  }

}

{{! +++fold-off+++ }}


{{! 

==================================================================
INCLUDED templates
==================================================================

+++start+++


> parameter
> mappings
> resources
> resource
> resourceInstance
> resourceSecurityGroup
> tag
> output


+++close+++

}}

